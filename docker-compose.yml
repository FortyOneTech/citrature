version: '3.8'

services:
  # Database
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: citrature
      POSTGRES_USER: citrature
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U citrature -d citrature"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # GROBID
  grobid:
    image: lfoppiano/grobid:0.8.0
    platform: linux/amd64
    ports:
      - "8070:8070"
    environment:
      - JAVA_OPTS=-Xmx2g
    volumes:
      - grobid_data:/opt/grobid
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8070/api/isalive"]
      interval: 60s
      timeout: 30s
      retries: 10
      start_period: 300s

  # API
  api:
    build: .
    command: sh -c "alembic upgrade head && uvicorn citrature.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://citrature:password@db:5432/citrature
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
      - GROBID_BASE_URL=http://grobid:8070
      - GOOGLE_REDIRECT_URI=http://localhost:8000/auth/google/callback
      - GCS_CREDENTIAL_PATH=/app/credentials.json
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - CROSSREF_MAILTO=${CROSSREF_MAILTO}
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - GCS_PROJECT_ID=${GCS_PROJECT_ID}
      - SECRET_KEY=${SECRET_KEY}
    env_file:
      - .env
    volumes:
      - .:/app
      - ./credentials.json:/app/credentials.json:ro
      - bm25_index:/app/bm25_index
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Celery Worker
  worker:
    build: .
    command: celery -A citrature.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://citrature:password@db:5432/citrature
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
      - GROBID_BASE_URL=http://grobid:8070
      - GCS_CREDENTIAL_PATH=/app/credentials.json
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - CROSSREF_MAILTO=${CROSSREF_MAILTO}
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - GCS_PROJECT_ID=${GCS_PROJECT_ID}
      - SECRET_KEY=${SECRET_KEY}
    env_file:
      - .env
    volumes:
      - .:/app
      - ./credentials.json:/app/credentials.json:ro
      - bm25_index:/app/bm25_index
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Celery Beat (for periodic tasks)
  beat:
    build: .
    command: celery -A citrature.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://citrature:password@db:5432/citrature
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - CROSSREF_MAILTO=${CROSSREF_MAILTO}
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - GCS_PROJECT_ID=${GCS_PROJECT_ID}
      - SECRET_KEY=${SECRET_KEY}
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Frontend (React)
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      api:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  grobid_data:
  bm25_index:
